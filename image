package com.example.image;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.channels.FileChannel.MapMode;

import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.os.Bundle;
import android.os.Environment;
import android.util.DisplayMetrics;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

public class MainActivity extends Activity {
ImageView imageView;
Rect sourceRect;
int mPostionx, mPostionY;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    imageView = (ImageView) findViewById(R.id.imgView);
  

    BitmapFactory.Options options = new BitmapFactory.Options();
    options.inJustDecodeBounds = true;
   BitmapFactory.decodeResource(getResources(), R.drawable.direction_board, options);
    //Bitmap myBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.direction_board).copy(Bitmap.Config.ARGB_8888, true);
    int imageHeight = options.outHeight;
    int imageWidth = options.outWidth;

    DisplayMetrics displaymetrics = new DisplayMetrics();
    getWindowManager().getDefaultDisplay().getMetrics(displaymetrics);
    int height = displaymetrics.heightPixels;
    int width = displaymetrics.widthPixels;

    int resultWidth = imageWidth / 2;
    int resultHieght = imageHeight / 2;

   /* sourceRect = new Rect(resultWidth, resultHieght, resultWidth + resultWidth / 4, height);
    Paint myPaint = new Paint();
   // myPaint.setColor(Color.RED);
    Bitmap myBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.direction_board).copy(Bitmap.Config.ARGB_8888, true);
    Canvas myCanvas = new Canvas(myBitmap);
    myCanvas.drawRect(sourceRect, myPaint);
    imageView.draw(myCanvas);

  
    imageView.setImageBitmap(myBitmap);

    imageView.setOnTouchListener(new OnTouchListener() {

        @Override
        public boolean onTouch(View view, MotionEvent event) {
            int x = (int) event.getX();
            int y = (int) event.getY();

            if (sourceRect.contains(x, y)) {
                Toast.makeText(MainActivity.this, "Wow", Toast.LENGTH_SHORT).show();
            }
            return false;
        }
    });*/

    
   
    
    
    ImageView iv = (ImageView)findViewById(R.id.touch);
    iv.setOnTouchListener(new OnTouchListener(){

    @Override
    public boolean onTouch(View v, MotionEvent event)
    {
    	Toast.makeText(MainActivity.this, "Wow", Toast.LENGTH_SHORT).show();
        return true;
    }});
    
}}











<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".MainActivity" >

   <ImageView
    android:id="@+id/imgView"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:src="@drawable/direction_board"
    android:scaleType="fitStart" />

  
    <ImageView
       android:id="@+id/touch"
       android:layout_width="50dp"
       android:layout_height="75dp"
       android:layout_alignLeft="@+id/imgView"
       android:layout_alignTop="@+id/imgView"
       android:layout_marginLeft="118dp"
       android:layout_marginTop="136dp" 
    
       />

</RelativeLayout>

